{
  "Comment": "A description of my state machine",
  "StartAt": "Judgment Packer",
  "States": {
    "Judgment Packer": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${arn_lambda_judgment_packer}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Error -> tre-internal",
          "ResultPath": "$.lambda-output.payload.parameters.errors"
        }
      ],
      "ResultSelector": {
        "payload.$": "$.Payload"
      },
      "ResultPath": "$.lambda-output",
      "Next": "Judgment Packer Output Handler"
    },
    "Unhandled Error Prep": {
      "Type": "Pass",
      "Parameters": {
        "lambda-output": {
          "payload": {
            "parameters": {
              "errors.$": "$.lambda-output.payload"
            }
          }
        },
        "parameters.$": "$.parameters",
        "properties.$": "$.properties"
      },
      "ResultPath": "$.temp",
      "OutputPath": "$.temp",
      "Next": "Error -> tre-internal"
    },
    "Judgment Packer Output Handler": {
      "Type": "Choice",
      "Choices": [
        {
          "Or": [
            {
              "Variable": "$.lambda-output.payload.properties.messageType",
              "IsPresent": false
            }
          ],
          "Next": "Unhandled Error Prep"
        },
        {
          "Or": [
            {
              "Variable": "$.lambda-output.payload.properties.messageType",
              "StringEquals": "uk.gov.nationalarchives.tre.messages.judgmentpackage.available.JudgmentPackageAvailable"
            }
          ],
          "Next": "Success -> tre-internal"
        },
        {
          "And": [
            {
              "Variable": "$.lambda-output.payload.properties.messageType",
              "StringEquals": "uk.gov.nationalarchives.tre.messages.Error"
            },
            {
              "Variable": "$.lambda-output.payload.parameters.errors",
              "IsPresent": true
            }
          ],
          "Next": "Error -> tre-internal"
        }
      ],
      "Default": "Unhandled Error Prep"
    },
    "Success -> tre-internal": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "Message.$": "$.lambda-output.payload",
        "TopicArn": "${arn_sns_topic_packed_judgment_out}"
      },
      "Next": "Success -> Slack",
      "ResultPath": null
    },
    "Success -> Slack": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "success",
          "Event": "Pack Judgment"
        },
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}"
      },
      "Next": "Success"
    },
    "Error -> tre-internal": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "Message": {
          "properties": {
            "messageType": "uk.gov.nationalarchives.tre.messages.Error",
            "timestamp.$": "$$.State.EnteredTime",
            "function": "tre-tf-module-judgment-packer",
            "producer": "TRE",
            "executionId.$": "$.properties.executionId",
            "parentExecutionId.$": "$.properties.parentExecutionId"
          },
          "parameters": {
            "status": "TRE_ERROR",
            "originator.$": "$.parameters.originator",
            "reference.$": "$.parameters.reference",
            "errors.$": "$.lambda-output.payload.parameters.errors"
          }
        },
        "TopicArn": "${arn_sns_topic_packed_judgment_out}"
      },
      "Next": "Error -> Slack",
      "ResultPath": null
    },
    "Success": {
      "Type": "Succeed"
    },
    "Error -> Slack": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "error",
          "ErrorMessage.$": "$.lambda-output.payload.parameters.errors",
          "Event": "Judgment Packer error"
        }
      },
      "Next": "Failed"
    },
    "Failed": {
      "Type": "Fail"
    }
  }
}
